Imports System
Imports System.Collections.Generic
Imports System.Linq
Imports System.Web
Imports System.Web.UI
Imports System.Web.UI.WebControls

Namespace WebApplication1
    Public Partial Class _Default
        Inherits Page

        Private Const AntiXsrfTokenKey As String = "__AntiXsrfToken"
        Private Const AntiXsrfUserNameKey As String = "__AntiXsrfUserName"
        Private _antiXsrfTokenValue As String

        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
            SetViewStateUserKeyAndResponseCookie()
        End Sub

        Private Sub SetViewStateUserKeyAndResponseCookie()
            Dim requestCookie = Request.Cookies(AntiXsrfTokenKey)
            Dim requestCookieGuidValue As Guid

            If requestCookie IsNot Nothing AndAlso Guid.TryParse(requestCookie.Value, requestCookieGuidValue) Then
                _antiXsrfTokenValue = requestCookie.Value
                Page.ViewStateUserKey = _antiXsrfTokenValue
            Else
                _antiXsrfTokenValue = Guid.NewGuid().ToString("N")
                Page.ViewStateUserKey = _antiXsrfTokenValue
                Dim responseCookie = New HttpCookie(AntiXsrfTokenKey) With {
                    .HttpOnly = True,
                    .Value = _antiXsrfTokenValue
                }
                If FormsAuthentication.RequireSSL AndAlso Request.IsSecureConnection Then responseCookie.Secure = True
                Response.Cookies.[Set](responseCookie)
            End If

            AddHandler Page.PreLoad, master_Page_PreLoad
            AddHandler Page.PreLoad, AddressOf PageOnPreLoad
        End Sub

        Private Sub PageOnPreLoad(ByVal sender As Object, ByVal eventArgs As EventArgs)
            If Not IsPostBack Then
                ViewState(AntiXsrfTokenKey) = Page.ViewStateUserKey
                ViewState(AntiXsrfUserNameKey) = If(Context.User.Identity.Name, String.Empty)
            Else

                If CStr(ViewState(AntiXsrfTokenKey)) <> _antiXsrfTokenValue OrElse CStr(ViewState(AntiXsrfUserNameKey)) <> (If(Context.User.Identity.Name, String.Empty)) Then
                    Throw New InvalidOperationException("Validation of Anti - XSRF token failed.")
                End If
            End If
        End Sub
    End Class
End Namespace
